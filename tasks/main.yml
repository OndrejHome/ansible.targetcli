---

- name: Include RHEL/CentOS variables
  include_vars: vars_RedHat_CentOS.yml
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

- name: Include SLES/OpenSUSE common variables
  include_vars: vars_SUSE_openSUSE.yml
  when: '(ansible_os_family == "Suse" or ansible_os_family == "openSUSE Leap")'

- name: Include SLES12 variables
  include_vars: vars_SUSE_SLES12.yml
  when: 'ansible_os_family == "Suse" and ansible_distribution_major_version|int == 12'

- name: Include SLES11 variables (check README for limitations)
  include_vars: vars_SUSE_SLES11.yml
  when: 'ansible_os_family == "Suse" and ansible_distribution_major_version|int == 11'

- name: "Install package(s) {{ targetcli_package }}"
  package:
    name: "{{ targetcli_package }}"
    state: 'installed'

- name: "Start and enable the {{ targetcli_service }} service"
  service:
    name: "{{ targetcli_service }}"
    enabled: true
    state: 'started'

- name: populate service facts
  service_facts:

- name: Warning about SLES12 firewall
  fail:
    msg: >
      This role cannot configure firewall on SLES12. You can either configure port 3260/tcp manually
      for this service and set the "ignore_sles12_firewall_configuration" variable to True,
      or you can stop and disable the SUSE2firewall.service'
  when:
    - ansible_facts.services["SuSEfirewall2.service"] is defined
    - ansible_facts.services["SuSEfirewall2.service"]["state"] == "running"
    - ignore_sles12_firewall_configuration == "false"

- name: Enable port 3260/tcp on firewalld
  firewalld:
    port: '3260/tcp'
    permanent: true
    immediate: true
    state: 'enabled'
  when: 'ansible_facts.services["firewalld.service"] is defined and ansible_facts.services["firewalld.service"]["state"] == "running"'
  notify:
    - restart firewalld

- name: define backstore objects
  targetcli_backstore:
    backstore_type: "{{ item.1.type }}"
    backstore_name: "{{ item.1.name }}"
    options: "{{ item.1.path }}"
  with_subelements:
    - "{{ iscsi_targets }}"
    - disks
  notify:
    - save targetcli configuration

- name: create iSCSI targets
  targetcli_iscsi:
    wwn: "{{ item.wwn }}"
  with_items: "{{ iscsi_targets }}"
  notify:
    - save targetcli configuration

- name: define ACLs for iSCSI target
  targetcli_iscsi_acl:
    wwn: "{{ item.0.wwn }}"
    initiator_wwn: "{{ item.1 }}"
  with_subelements:
    - "{{ iscsi_targets }}"
    - initiators
  notify:
    - save targetcli configuration

- name: assing LUNs to initiators
  targetcli_iscsi_lun:
    wwn: "{{ item.0.wwn }}"
    backstore_type: "{{ item.1.type }}"
    backstore_name: "{{ item.1.name }}"
  with_subelements:
    - "{{ iscsi_targets }}"
    - disks
  notify:
    - save targetcli configuration
